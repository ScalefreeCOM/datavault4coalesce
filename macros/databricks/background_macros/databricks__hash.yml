fileVersion: 1
id: "61"
macroString: |-
    {#---------------------------------------------------------------------------------#}
    {#-- Main macro for DV2.0 hashing.                                               --#}
    {#---------------------------------------------------------------------------------#}
    {%- macro datavault4coalesce__databricks_hash(columns, alias=none, is_hashdiff=false, datatype='STRING', algo='MD5', multi_active_key=[], main_hashkey_col='') -%}
    {#-- Setup DV2.0 standards for hashing                                           --#}
    {#--                                                                             --#}
    {#-- Modify the following settings to implement your DV2.0 hashing standards.    --#}
    {#--   concat_string: string used to concatenate hash input fields.              --#}
    {#--                  Recommended: || (double pipes) or _ (underscore)           --#}
    {#--   quote: character used to quote around hash input fields.                  --#}
    {#--          Recommended: '"' (double quotes)                                   --#}
    {#--  null_placeholder_string: ???                                               --#}
    {#--  hash_input_case_sensitive: case sensitivity settings for hash input.       --#}
    {%- set concat_string = '||' -%}
    {%- set quote = '"' -%}
    {%- set null_placeholder_string = '^^' -%}
    {%- set hash_input_case_sensitive = datavault4coalesce.config.hash_input_case_sensitive -%}

    {#-- Select hashing algorithm from global variables. --#}
    {%- set datatype = datatype|upper -%}
    {%- set hash_alg = datavault4coalesce__databricks_hash_algorithm(hash_function=algo, hash_datatype=datatype) -%}
    {%- set unknown_key = datavault4coalesce__databricks_unknown_key(hash_function=algo, hash_datatype=datatype) -%}
    {%- set error_key = datavault4coalesce__databricks_error_key(hash_function=algo, hash_datatype=datatype) -%}

    {%- set attribute_standardise = datavault4coalesce__databricks_attribute_standardise() %}

    {#-- Set up a list of columns going into hashing calculation --#}
    {%- set ns = namespace(columns=[], all_null=[]) -%}
    {%- set columns_input = columns -%}

    {%- for column in columns_input -%}
        {%- set ns.columns = ns.columns + [column.name] -%}
    {%- endfor -%}

    {%- set standardise_prefix = datavault4coalesce__databricks_standardise_prefix(case_sensitive=hash_input_case_sensitive, 
                                                                        hash_alg=hash_alg,
                                is_hashdiff=is_hashdiff,
                                                                        datatype=datatype,
                                                                        alias=alias, 
                                                                        zero_key=unknown_key,
                                                                        multi_active_key=multi_active_key,
                                                                        main_hashkey_col=main_hashkey_col) -%}
    {%- set standardise_suffix = datavault4coalesce__databricks_standardise_suffix(case_sensitive=hash_input_case_sensitive, 
                                                                        hash_alg=hash_alg,
                                            is_hashdiff=is_hashdiff,
                                                                        datatype=datatype, 
                                                                        alias=alias, 
                                                                        zero_key=unknown_key,
                                                                        multi_active_key=multi_active_key,
                                                                        main_hashkey_col=main_hashkey_col) -%}    

    {#-- Start printing SQL for hash calculation --#}
    {{ standardise_prefix }}
    {%- for column in columns -%}
        {%- set ns.all_null = ns.all_null + [null_placeholder_string] -%}
        {%- if datavault4coalesce.config.hash_passthrough_input_transformations -%}
            {# xxxx Databricks xxxx {%- set column_str = datavault4coalesce__databricks_as_constant(get_source_transform(column)) -%} #}
            {%- set column_str = datavault4coalesce__databricks_as_constant(column.name) -%}

        {%- else -%}
            {%- if '.' in column.name %}
                {% set column_str = column.name -%}
            {%- else -%}
                {%- set column_str = datavault4coalesce__databricks_as_constant(column.name) -%}
            {%- endif -%}
        {%- endif -%}

        {{- "\nCOALESCE(({}), '{}')".format(attribute_standardise | replace('[EXPRESSION]', column_str) | replace('[QUOTE]', quote) | replace('[NULL_PLACEHOLDER_STRING]', null_placeholder_string), null_placeholder_string) | indent(4) -}}
        {{- ",'{}',".format(concat_string) if not loop.last -}}

        {%- if loop.last -%}
            {{ standardise_suffix | replace('[ALL_NULL]', ns.all_null | join("")) | indent(4) }}
        {%- else -%}
            {%- set ns.all_null = ns.all_null + [concat_string] -%}
        {%- endif -%}
    {%- endfor -%}
    {%- endmacro -%}
name: databricks__hash
type: Macro