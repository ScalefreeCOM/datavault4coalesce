{% if config.preSQL %}
  {{ stage('Pre-SQL') }}
  {{ config.preSQL }}
{% endif %}

{% for test in node.tests if config.testsEnabled %}
  {% if test.runOrder == 'Before' %}
    {{ test_stage(test.name, test.continueOnFailure) }}
    {{ test.templateString }}
  {% endif %}
{% endfor %}

{% for source in sources %}

  {{ stage('INSERT INTO Hub - ' ~ source.name) }}
  
  {%- set hashkey_column = get_value_by_column_attribute("is_Hub_hk") -%}
  
  {#-- enable when ColumnDropDownSelector is used again
  {%- if 'is_Hub_hk' not in config.keys() -%}

  {%- else -%}
    
    {%- set hashkey_column = config.is_Hub_hk.name -%}
  
  {%- endif -%}
  #}

  INSERT INTO {{ ref_no_link(node.location.name, node.name) }}
  
WITH incoming AS (

  SELECT DISTINCT
  {% for col in source.columns %}
    {{ get_source_transform(col) }} AS "{{ col.name }}"
    {%- if not loop.last -%}, {% endif %}
  {% endfor %}

  {{ source.join }}

    {% if not config.disable_hwm -%}
    WHERE "{{ datavault4coalesce.config.ldts_alias }}" > (
        SELECT 
            COALESCE(MAX("{{ datavault4coalesce.config.ldts_alias }}"),  {{ datavault4coalesce__string_to_timestamp(datavault4coalesce.config.timestamp_format, datavault4coalesce.config.beginning_of_all_times) }})
        FROM {{ ref_no_link(node.location.name, node.name) }}
     WHERE "{{ datavault4coalesce.config.ldts_alias }}" != {{ datavault4coalesce__string_to_timestamp(datavault4coalesce.config.timestamp_format, datavault4coalesce.config.end_of_all_times) }}
        )
    {%- endif %}  

), 

new_records AS (

  SELECT 
  "SRC".* 
  FROM incoming "SRC"
  WHERE NOT EXISTS 

  (SELECT 1 
  FROM {{ ref_no_link(node.location.name, node.name) }} "TGT"
  WHERE 
    "SRC"."{{ hashkey_column }}" = "TGT"."{{ hashkey_column }}")    

  QUALIFY ROW_NUMBER() OVER (PARTITION BY "{{ hashkey_column }}" ORDER BY "{{ datavault4coalesce.config.ldts_alias }}" ) = 1
)


  SELECT * FROM new_records

{% endfor %}

{% if config.postSQL %}
  {{ stage('Post-SQL') }}
  {{ config.postSQL }}
{% endif %}

{% if config.testsEnabled %}
  {% for test in node.tests %}
    {% if test.runOrder == 'After' %}
      {{ test_stage(test.name, test.continueOnFailure) }}
      {{ test.templateString }}
        {% endif %}
  {% endfor %}

  {% for column in columns %}
    {% for test in column.tests %}
      {{ test_stage(column.name + ": " + test.name) }}
      {{ test.templateString }}
    {% endfor %}
  {% endfor %}
{% endif %}